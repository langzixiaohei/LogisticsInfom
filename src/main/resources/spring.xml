<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
  http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop.xsd
  http://www.springframework.org/schema/tx
  http://www.springframework.org/schema/tx/spring-tx.xsd
">

    <!--配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/logisticsinfom?useUnicode=true&amp;characterEncoding=utf8"/>
        <property name="username" value="root"/>
        <property name="password" value="123"/>
        
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="2"/>
        <property name="maxWait" value="1200"/>
    </bean>

    <!--整合Mybatis和Spring-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--Mybatis全局配置-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!--加载mybatis映射文件-->
        <property name="mapperLocations" value="classpath:mapper/**"/>
    </bean>

    <!--配置dao-->
    <!--DAO接口所在的包名,spring会自动查找其下的类,并且给他注入sqlSessionFactory-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="edu.zhengshang.liujy.dao"/>
    </bean>


    <!--配置事务管理器，spring来处理数据库事务-->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--&lt;!&ndash;配置数据源&ndash;&gt;-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <!--<tx:advice id="serviceAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
    <!--<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
    <!--<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
    <!--<tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
    <!--<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
    <!--<tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception" />-->
    <!--&lt;!&ndash;除了以上方法，其他方法都是只读的（查询）&ndash;&gt;-->
    <!--<tx:method name="*" read-only="true"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--配置哪些方法需要事务管理-->
    <!--<aop:config>-->
        <!--&lt;!&ndash;配置切入点&ndash;&gt;-->
        <!--<aop:pointcut id="pointcut" expression="execution(* org.lanqiao.service..*.*(..))"/>-->
        <!--&lt;!&ndash;把切入点和事务管理结合&ndash;&gt;-->
        <!--<aop:advisor advice-ref="serviceAdvice" pointcut-ref="pointcut"/>-->
    <!--</aop:config>-->
</beans>